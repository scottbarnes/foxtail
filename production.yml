version: '3'

# Use bind volumes instead
# volumes:
#   production_postgres_data: {}
#   production_postgres_data_backups: {}
#   production_traefik: {}
#   VOL_MEDIA: {}

services:
  django-prod-fox: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: foxtail_production_django
    restart: always
    container_name: django_prod_fox
    volumes:
      - ./VOL_MEDIA:/app/foxtail/media
    depends_on:
      - redis-prod-fox
      # - postgres-prod-fox
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    ports:
      - "8003:5000"
    command: /start

 # postgres-prod-fox:
 #   build:
 #     context: .
 #     dockerfile: ./compose/production/postgres/Dockerfile
 #   image: foxtail_production_postgres
 #   restart: always
 #   container_name: postgres_prod_fox
 #   volumes:
 #     - production_postgres_data:/var/lib/postgresql/data
 #     - production_postgres_data_backups:/backups
 #   env_file:
 #     - ./.envs/.production/.postgres

 # traefik:
 #   build:
 #     context: .
 #     dockerfile: ./compose/production/traefik/Dockerfile
 #   image: foxtail_production_traefik
 #   depends_on:
 #     - django
 #   volumes:
 #     - production_traefik:/etc/traefik/acme
 #   ports:
 #     - "0.0.0.0:80:80"
 #     - "0.0.0.0:443:443"
 #     - "0.0.0.0:5555:5555"

  redis-prod-fox:
    image: redis:5.0
    restart: always
    container_name: redis_prod_fox

  celeryworker-prod-fox:
    <<: *django
    image: foxtail_production_celeryworker
    restart: always
    container_name: celeryworker_prod_fox
    ports: []
    command: /start-celeryworker

  celerybeat-prod-fox:
    <<: *django
    image: foxtail_production_celerybeat
    restart: always
    container_name: celerybeat_prod_fox
    ports: []
    command: /start-celerybeat

  flower-prod-fox:
    <<: *django
    image: foxtail_production_flower
    restart: always
    container_name: flower_prod_fox
    ports:
     - "5556:5555"
    command: /start-flower

  
